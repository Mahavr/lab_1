{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASG,iBAAiB,UACnCC,EAAUJ,SAASC,cAAc,YACvCF,EAAKM,iBAAiB,UAGtB,SAAkBC,GAChBA,EAAEC,iBAEF,MAAMC,EAAUC,MAAMC,KAAKR,GAAQS,KAAIC,GAASA,EAAMC,MAAMC,SACzCN,EAAQO,OAAM,CAACC,EAAKC,EAAGC,IAAQF,IAAQE,EAAI,MAE5DhB,EAAOiB,SAAQP,IACbQ,EAAOC,KAAKT,EAAMC,MAAMS,MAAM,KAAKX,IAAIY,QAAQ,IAEjDC,QAAQC,IAAIL,IAEZM,MACE,gFAMN,SAAmBC,GACjB,MAAMC,EAAID,EAAOb,OACjBV,EAAQyB,UAAY,GAsBtB,SAAqBC,EAAQF,GAC3B,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAGX,IACrB,GAAqB,IAAjBa,EAAOb,GAAGA,GACZ,OAAO,EAGX,OAAO,C,CA3BPc,CAAYJ,EAAQC,GACfxB,EAAQyB,WAAa,kCAACzB,EACDyB,WAAA,oCA4B5B,SAAyBG,EAAQJ,GAC/B,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAGX,IACrB,GAAqB,IAAjBe,EAAOf,GAAGA,GACZ,OAAO,EAGX,OAAO,C,CAhCgBgB,CAAPN,EAAQC,GACnBxB,EAAQyB,WAAa,sCAACzB,EACGyB,WAAA,0CAiChC,SAAqBK,EAAQN,GAC3B,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAGX,IACrB,IAAK,IAAIkB,EAAI,EAAGA,EAAIP,EAAGO,IACrB,GAAID,EAAOjB,GAAGkB,KAAOD,EAAOC,GAAGlB,GAC7B,OAAO,EAIb,OAAO,C,CAvCqBmB,CAAhBT,EAAQC,GACfxB,EAAQyB,WAAa,iCAACzB,EACFyB,WAAA,oCAuC3B,SAAyBQ,EAAQT,GAC/B,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAGX,IACrB,IAAK,IAAIkB,EAAI,EAAGA,EAAIP,EAAGO,IACrB,GAAIlB,IAAMkB,GAAsB,IAAjBE,EAAOpB,GAAGkB,IAA6B,IAAjBE,EAAOF,GAAGlB,GAC7C,OAAO,EAIb,OAAO,C,CA7CeqB,CAANX,EAAQC,GACnBxB,EAAQyB,WAAa,qCAACzB,EACEyB,WAAA,2CA8C/B,SAAsBU,EAAQX,GAC5B,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAGX,IACrB,IAAK,IAAIkB,EAAI,EAAGA,EAAIP,EAAGO,IACrB,IAAK,IAAIK,EAAI,EAAGA,EAAIZ,EAAGY,IACrB,GAAqB,IAAjBD,EAAOtB,GAAGkB,IAA6B,IAAjBI,EAAOJ,GAAGK,IAA6B,IAAjBD,EAAOtB,GAAGuB,GACxD,OAAO,EAKf,OAAO,C,CAtDqBC,CAAfd,EAAQC,GAChBxB,EAAQyB,WAAa,kCAACzB,EACDyB,WAAA,uC,CAxB1Ba,CAAUtB,E,IAhBZ,MAAMA,EAAS","sources":["src/js/thirtLab.js"],"sourcesContent":["const form = document.querySelector('#form');\nconst inputs = document.querySelectorAll('.input');\nconst results = document.querySelector('.results');\nform.addEventListener('submit', onSubmit);\n// let matrix = [];\nconst matrix = [];\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const lengths = Array.from(inputs).map(input => input.value.length);\n  const sameLength = lengths.every((val, i, arr) => val === arr[0]);\n  if (sameLength) {\n    inputs.forEach(input => {\n      matrix.push(input.value.split(',').map(Number));\n    });\n    console.log(matrix);\n  } else {\n    alert(\n      'Всі рядки мають різну довжину. Будь ласка, введіть рядки однакової довжини.'\n    );\n  }\n  typeCheck(matrix);\n}\n\nfunction typeCheck(matrix) {\n  const n = matrix.length;\n  results.innerHTML = '';\n  isReflexive(matrix, n)\n    ? (results.innerHTML += `<p> Відношення рефлексивне </p>`)\n    : (results.innerHTML += `<p>Відношення не рефлексивне </p>`);\n\n  isAntireflexive(matrix, n)\n    ? (results.innerHTML += `<p> Відношення антирефлексивне </p>`)\n    : (results.innerHTML += `<p>Відношення не є антирефлексивна </p>`);\n\n  isSymmetric(matrix, n)\n    ? (results.innerHTML += `<p> Відношення симетричне </p>`)\n    : (results.innerHTML += `<p> Відношення не симетричне </p>`);\n\n  isAntisymmetric(matrix, n)\n    ? (results.innerHTML += `<p> Відношення антисиметричне </p>`)\n    : (results.innerHTML += `<p> Відношення не є антисиметричним </p>`);\n\n  isTransitive(matrix, n)\n    ? (results.innerHTML += `<p> Відношення транзитивне </p>`)\n    : (results.innerHTML += `<p> Відношення не є транзитивним </p>`);\n}\n\nfunction isReflexive(matrix, n) {\n  for (let i = 0; i < n; i++) {\n    if (matrix[i][i] !== 1) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isAntireflexive(matrix, n) {\n  for (let i = 0; i < n; i++) {\n    if (matrix[i][i] !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isSymmetric(matrix, n) {\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      if (matrix[i][j] !== matrix[j][i]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nfunction isAntisymmetric(matrix, n) {\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      if (i !== j && matrix[i][j] === 1 && matrix[j][i] === 1) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction isTransitive(matrix, n) {\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      for (let k = 0; k < n; k++) {\n        if (matrix[i][j] === 1 && matrix[j][k] === 1 && matrix[i][k] !== 1) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n"],"names":["$e5ac268d89e9be21$var$form","document","querySelector","$e5ac268d89e9be21$var$inputs","querySelectorAll","$e5ac268d89e9be21$var$results","addEventListener","e","preventDefault","lengths","Array","from","map","input","value","length","every","val","i","arr","forEach","$e5ac268d89e9be21$var$matrix","push","split","Number","console","log","alert","matrix1","n","innerHTML","matrix2","$e5ac268d89e9be21$var$isReflexive","matrix3","$e5ac268d89e9be21$var$isAntireflexive","matrix4","j","$e5ac268d89e9be21$var$isSymmetric","matrix5","$e5ac268d89e9be21$var$isAntisymmetric","matrix6","k","$e5ac268d89e9be21$var$isTransitive","$e5ac268d89e9be21$var$typeCheck"],"version":3,"file":"thirtLab.92c75a32.js.map"}