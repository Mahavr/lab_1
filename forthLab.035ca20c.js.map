{"mappings":"YAAA,IAAMA,EAAeC,SAASC,cAAc,iBACtCC,EAAUF,SAASC,cAAc,YACjCE,EAAOH,SAASC,cAAc,SAChCG,EAASJ,SAASK,iBAAiB,UACjCC,EAAUN,SAASC,cAAe,YAClCM,EAAUP,SAASC,cAAe,YAExCE,EAAKK,iBAAiB,UAetB,SAAkBC,GAChBA,EAAEC,iBAEcC,MAAMC,KAAKR,GAAQS,KAAI,SAAAC,G,OAASA,EAAMC,MAAMC,M,IACjCC,OAAM,SAACC,EAAKC,EAAGC,G,OAAQF,IAAQE,EAAI,E,KAE5DC,EAAS,GACTjB,EAAOkB,SAAQ,SAAAR,GACbO,EAAOE,KAAKT,EAAMC,MAAMS,MAAM,KAAKX,IAAIY,Q,KAIzCC,MACE,gFAUN,SAAmBC,GAEjB,IADA,IAAIC,EAAc,GACTT,EAAI,EAAGA,EAAIQ,EAAOX,OAAQG,IAAK,CAEtC,IADA,IAAIU,EAAiB,GACZC,EAAI,EAAGA,EAAIH,EAAOR,GAAGH,OAAQc,IACpC,GAAqB,IAAjBH,EAAOR,GAAGW,GAAU,CAItB,IAHA,IAAIC,EAAQ,CAACZ,EAAI,EAAGW,EAAI,GACpBE,GAAW,EAENC,EAAI,EAAGA,EAAIL,EAAYZ,OAAQiB,IAAK,CAE3C,IADA,IAAIC,EAAeN,EAAYK,GACtBE,EAAI,EAAGA,EAAID,EAAalB,OAAQmB,IAAK,CAC5C,IAAIC,EAAcF,EAAaC,GAC/B,GAAIC,EAAY,KAAOL,EAAM,IAAMK,EAAY,KAAOL,EAAM,GAAI,CAC9DC,GAAW,EACX,K,EAGJ,GAAIA,EACF,K,CAICA,GACHH,EAAeN,KAAKQ,E,CAItBF,EAAeb,OAAS,GAC1BY,EAAYL,KAAKM,E,EAoBvB,SAAoBD,GAClBS,EAAmB,EACnBT,EAAYN,SAAQ,SAAAgB,GAClBD,GAAoBC,EAAetB,M,IAMvC,SAAiCY,EAAaW,GAI5C,IAHA,IAAIC,EAAU,GACVC,EAAU,GAELtB,EAAI,EAAGA,EAAIoB,EAAkBpB,IACpCqB,GAAW,IAAUE,OAANvB,EAAI,EAAE,yBAGvBS,EAAYN,SAAQ,SAAAqB,GAClBA,EAAcrB,SAAQ,SAAAsB,GACpBH,GAAW,IAAiBC,OAAbE,EAAO,GAAG,KAAaF,OAAVE,EAAO,GAAG,M,OAG1CtC,EAAQuC,UAAYL,EACpBjC,EAAQsC,UAAYJ,C,CAjBpBK,CAAwBlB,EAAaS,E,CAvBrCU,CAAWnB,E,CAvCXoB,CAAU3B,E,IA9BZtB,EAAaS,iBAAiB,SAI9B,SAAkBC,GAChBA,EAAEC,iBACF,IAAMuC,EAAQxC,EAAEyC,OAAOnC,MACvBb,EAAQ2C,UAAY,GACpB,IAAK,IAAI1B,EAAI,EAAGA,EAAI8B,EAAO9B,IACzBjB,EAAQ2C,WAAc,qDAExBzC,EAASJ,SAASK,iBAAiB,S,IAVrC,IAAIgB,EAAS,GACTgB,EAAmB,C","sources":["src/js/forthLab.js"],"sourcesContent":["const counterInput = document.querySelector('.counterInput');\nconst wrapper = document.querySelector('.wrapper');\nconst form = document.querySelector('#form');\nlet inputs = document.querySelectorAll('.input');\nconst answer1 = document.querySelector(`.answer1`);\nconst answer2 = document.querySelector(`.answer2`);\n\nform.addEventListener('submit', onSubmit);\ncounterInput.addEventListener('input', onChange);\nlet matrix = [];\nlet coordinatesPairs = 0;\n\nfunction onChange(e) {\n  e.preventDefault();\n  const count = e.target.value;\n  wrapper.innerHTML = '';\n  for (let i = 0; i < count; i++) {\n    wrapper.innerHTML += `<label><input class=\"input\" type=\"text\" /></label>`;\n  }\n  inputs = document.querySelectorAll('.input');\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const lengths = Array.from(inputs).map(input => input.value.length);\n  const sameLength = lengths.every((val, i, arr) => val === arr[0]);\n  if (sameLength) {\n    matrix = [];\n    inputs.forEach(input => {\n      matrix.push(input.value.split(',').map(Number));\n    });\n    // console.log(matrix);\n  } else {\n    alert(\n      'Всі рядки мають різну довжину. Будь ласка, введіть рядки однакової довжини.'\n    );\n  }\n  getEdges1(matrix);\n  //   const option = e.target[0].value;\n  //   if (option === 'directed') {\n  //   } else {\n  //   }\n}\n\nfunction getEdges1(matrix) {\n  let coordinates = [];\n  for (let i = 0; i < matrix.length; i++) {\n    let rowCoordinates = [];\n    for (let j = 0; j < matrix[i].length; j++) {\n      if (matrix[i][j] === 1) {\n        let coord = [i + 1, j + 1];\n        let isMirror = false;\n\n        for (let k = 0; k < coordinates.length; k++) {\n          let mirrorCoords = coordinates[k];\n          for (let l = 0; l < mirrorCoords.length; l++) {\n            let mirrorCoord = mirrorCoords[l];\n            if (mirrorCoord[0] === coord[1] && mirrorCoord[1] === coord[0]) {\n              isMirror = true;\n              break;\n            }\n          }\n          if (isMirror) {\n            break;\n          }\n        }\n\n        if (!isMirror) {\n          rowCoordinates.push(coord);\n        }\n      }\n    }\n    if (rowCoordinates.length > 0) {\n      coordinates.push(rowCoordinates);\n    }\n  }\n  countPairs(coordinates);\n}\n\nfunction getEdges2(matrix) {\n  for (let i = 0; i < matrix.length; i++) {\n    let rowCoordinates = [];\n    for (let j = 0; j < matrix[i].length; j++) {\n      if (matrix[i][j] === 1) {\n        rowCoordinates.push([i + 1, j + 1]);\n      }\n    }\n    if (rowCoordinates.length > 0) {\n      coordinates.push(rowCoordinates);\n    }\n  }\n}\n\nfunction countPairs(coordinates) {\n  coordinatesPairs = 0;\n  coordinates.forEach(coordinatesRow => {\n    coordinatesPairs += coordinatesRow.length;\n  });\n  // console.log(coordinatesPairs);\n  renderMatrixCoordinates(coordinates, coordinatesPairs);\n}\n\nfunction renderMatrixCoordinates(coordinates, coordinatesPairs) {\n  let renderE = '';\n  let renderV = '';\n\n  for (let i = 0; i < coordinatesPairs; i++) {\n    renderE += `E${i + 1} &nbsp &nbsp &nbsp|  `;\n  }\n\n  coordinates.forEach(coordinateRow => {\n    coordinateRow.forEach(number => {\n      renderV += `V${number[0]}V${number[1]} | `;\n    });\n  });\n  answer1.innerHTML = renderE;\n  answer2.innerHTML = renderV;\n}\n"],"names":["$ee1fac52a0423a85$var$counterInput","document","querySelector","$ee1fac52a0423a85$var$wrapper","$ee1fac52a0423a85$var$form","$ee1fac52a0423a85$var$inputs","querySelectorAll","$ee1fac52a0423a85$var$answer1","$ee1fac52a0423a85$var$answer2","addEventListener","e","preventDefault","Array","from","map","input","value","length","every","val","i","arr","$ee1fac52a0423a85$var$matrix","forEach","push","split","Number","alert","matrix1","coordinates","rowCoordinates","j","coord","isMirror","k","mirrorCoords","l","mirrorCoord","$ee1fac52a0423a85$var$coordinatesPairs","coordinatesRow","coordinatesPairs1","renderE","renderV","concat","coordinateRow","number","innerHTML","$ee1fac52a0423a85$var$renderMatrixCoordinates","$ee1fac52a0423a85$var$countPairs","$ee1fac52a0423a85$var$getEdges1","count","target"],"version":3,"file":"forthLab.035ca20c.js.map"}